class Solution 
{
    static boolean isPrime(int n)
    {
        // Corner case
        if (n <= 1)
            return false;
 
        // Check from 2 to n-1
        for (int i = 2; i <=Math.sqrt(n); i++)
            if (n % i == 0)
                return false;
 
        return true;
    }
 
    public int diagonalPrime(int[][] nums) 
    {
        int max =0;
        for(int i=0; i<nums.length; i++)
        {

            if(isPrime(nums[i][i])) max = Math.max(max,nums[i][i]);
            if(isPrime(nums[i][nums.length-i-1])) max = Math.max(max,nums[i][nums.length-i-1]);
                      
        }
       
        return max;
    }
}